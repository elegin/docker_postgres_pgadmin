version: '3.7'
services:
  postgres:
    container_name: postgres_container
    image: postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      # PGDATA: /var/lib/postgresql/data
    volumes:
       - ./:/var/lib/postgresql/
       - ./init/init-user-db.sh:/docker-entrypoint-initdb.d/init-user-db.sh
       - ./pgdump:/pgdump
    ports:
      - "5432:5432"
    networks:
      - postgres
    restart: unless-stopped
  
  pgadmin:
    container_name: pgadmin_container
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
    volumes:
       - pgadmin:/root/.pgadmin
    ports:
      - "${PGADMIN_PORT:-5050}:80"
    networks:
      - postgres
    restart: unless-stopped

  # node:
  #   container_name: node_ui
  #   image: "node:13"
  #   user: "node"
  #   working_dir: /home/node/app
  #   environment:
  #     - NODE_ENV=development
  #   volumes:
  #     - ./ui:/home/node/app
  #   expose:
  #     - "3000"
  #   command: "npm start"  

  node:
    container_name: node_api
    image: "node:13"
    user: "node"
    working_dir: /home/node/app
    environment:
      - NODE_ENV=development
    volumes:
      - ./api/:/home/node/app
    expose:
      - "8080"
    command: "npm start"  

networks:
  postgres:
    driver: bridge
volumes:
  postgres:
  pgadmin:
  init:
  data:
  ui:


  